<?php


/**
 * @file
 * Contains custom_text_to_select.module.
 */

 use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Render\Element\Ajax;

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Alters the exposed filter form on the property type pages
 */

 function custom_text_to_select_form_views_exposed_form_alter(array &$form, FormStateInterface $form_state, string $form_id) {
  

  if ($form['#id'] == 'views-exposed-form-properties-page-1') {

    // Attach a library that includes the AJAX and JS functionalities.
    $form['#attached']['library'][] = 'custom_text_to_select/custom_text_to_select_js';

      // Change the -Any- option to Status
      $form['field_property_st_target_id']['#options']['All'] = 'Status';

      // Use ajax to make changes to Price options
      $form['field_property_st_target_id']['#ajax'] = [
        // Set focus to the textfield after hitting enter.
        'disable-refocus' => FALSE,
        // Trigger when user hits enter key.
        'event' => 'change',
        'callback' => 'custom_text_to_select_update_prices',
        'wrapper' => 'field-property-sale-price-value',
        'progress' => [
            'type' => 'throbber',
            'message' => t('Verifying entry...'),
        ],
      ];

    
      // Change the -Any- option to Any
      $form['field_property_category_target_id']['#options']['All'] = 'Property Type';


      // Rebuild Select Field
      $form['field_property_sale_price_value'] = [
        '#label' => '',
        '#markup' => '',
        '#type' => 'select',
        '#multiple' => False,
        '#empty_option' => t('Max Price'),
        '#size' => 1,
        '#attributes' => [
          'id' => 'field-property-sale-price-value',
        ],
        '#prefix' => '<div id="field-property-sale-price-value">', 
        '#suffix' => '</div>',
        '#options' => _custom_text_to_select_get_max_options($form_state->getValue('field_property_st_target_id')),
      ];

  } 

}

/**
 * Callback function to update the second select field.
 */
function custom_text_to_select_update_prices(array &$form, FormStateInterface $form_state) {


  // Return the updated second select field to replace its content via AJAX
  return $form['field_property_sale_price_value'];
}

/**
* Helper function to get second select options based on the first select value.
*/
function _custom_text_to_select_get_max_options($selected_option) {
  // Define different sets of options based on the first select's value.
  $options = [];
  switch ($selected_option) {

    case 'All':
      $options = [
        'All' => t('All Properties'),
      ];
      break;

    case '124':
      $options = [
        100 => t('$100 USD/night'),
        250 => t('$250 USD/night'), 
        500 => t('$500 USD/night'), 
        750 => t('$750 USD/night'), 
        1000 => t('$1,000 USD/night'), 
        1500 => t('$1,500 USD/night'), 
        2500 => t('$2,500 USD/night'), 
        5000 => t('$5,000 USD/night'), 
        7500 => t('$7,500 USD/night'), 
        10000 => t('$10,000 USD/night')
      ];
      break;

    case '11':
      $options = [
        100 => t('$100 USD/month'),
        250 => t('$250 USD/month'), 
        500 => t('$500 USD/month'), 
        750 => t('$750 USD/month'), 
        1000 => t('$1,000 USD/month'), 
        1500 => t('$1,500 USD/month'), 
        2500 => t('$2,500 USD/month'), 
        5000 => t('$5,000 USD/month'), 
        7500 => t('$7,500 USD/month'), 
        10000 => t('$10,000 USD/month')
      ];
      break;

    case '10':
      $options = [
        100000 => t('$100,000'),
        250000 => t('$250,000 USD'),
        500000 => t('$500,000 USD'),
        750000 => t('$750,000 USD'),
        1000000 => t('$1,000,000 USD'),
        5000000 => t('$5,000,000 USD'),
        10000000 => t('$10,000,000 USD'),
        25000000 => t('$25,000,000 USD'),
      ];
      break;

    default:
      $options = [
        'All' => t('Select a Status option'),
      ];
  }

  return $options;
}

?>
